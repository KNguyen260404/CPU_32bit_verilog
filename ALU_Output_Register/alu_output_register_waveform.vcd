$date
	Fri Jun 20 13:09:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_output_register_tb $end
$var wire 32 ! result_out [31:0] $end
$var parameter 32 " CLK_PERIOD $end
$var parameter 32 # WIDTH $end
$var reg 1 $ alu_out_write $end
$var reg 1 % clk $end
$var reg 32 & expected_result [31:0] $end
$var reg 1 ' reset $end
$var reg 32 ( result [31:0] $end
$var integer 32 ) test_case [31:0] $end
$scope module uut $end
$var wire 1 $ alu_out_write $end
$var wire 1 % clk $end
$var wire 1 ' reset $end
$var wire 32 * result [31:0] $end
$var reg 32 + result_out [31:0] $end
$upscope $end
$scope task display_test_result $end
$var reg 240 , test_name [240:1] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 #
b1010 "
$end
#0
$dumpvars
bx ,
bx +
b0 *
b0 )
b0 (
1'
b0 &
0%
0$
bx !
$end
#5000
b0 !
b0 +
1%
#10000
0%
#15000
1%
#20000
0%
0'
#25000
1%
#30000
0%
b10010001101000101011001111000 &
1$
b10010001101000101011001111000 (
b10010001101000101011001111000 *
b1 )
#35000
b10010001101000101011001111000 !
b10010001101000101011001111000 +
1%
#40000
0%
0$
b10000111011001010100001100100001 (
b10000111011001010100001100100001 *
b10 )
b11011000111010101100101001000000111011101101001011101000110100000100000011000010110110001110101010111110110111101110101011101000101111101110111011100100110100101110100011001010010000001100101011011100110000101100010011011000110010101100100 ,
#45000
1%
#50000
0%
b10101011110011011110111100000001 &
1$
b10101011110011011110111100000001 (
b10101011110011011110111100000001 *
b11 )
b11101010110010100100000011101110110100101110100011010000010000001100001011011000111010101011111011011110111010101110100010111110111011101110010011010010111010001100101001000000110010001101001011100110110000101100010011011000110010101100100 ,
#55000
b10101011110011011110111100000001 !
b10101011110011011110111100000001 +
1%
#60000
0%
b0 &
1'
b100 )
b11011000111010101100101001000000111011101101001011101000110100000100000011000010110110001110101010111110110111101110101011101000101111101110111011100100110100101110100011001010010000001100101011011100110000101100010011011000110010101100100 ,
#65000
b0 !
b0 +
1%
#70000
0%
b1010101010101010101010101010101 &
b1010101010101010101010101010101 (
b1010101010101010101010101010101 *
b101 )
0'
b1010010011001010111001101100101011101000010000001100011011011000110010101100001011100100111001100100000011101000110100001100101001000000111001001100101011001110110100101110011011101000110010101110010 ,
#75000
b1010101010101010101010101010101 !
b1010101010101010101010101010101 +
1%
#80000
0%
b11001 &
b11001 (
b11001 *
b110 )
b101011101110010011010010111010001100101001000000110000101100110011101000110010101110010001000000111001001100101011100110110010101110100 ,
#85000
b11001 !
b11001 +
1%
#90000
0%
b1010 &
b1010 (
b1010 *
b111 )
b1010011011101000110111101110010011001010010000001000001010011000101010100100000011000010110010001100100011010010111010001101001011011110110111000100000011100100110010101110011011101010110110001110100 ,
#95000
b1010 !
b1010 +
1%
#100000
0%
b111111110000000011111111 &
b111111110000000011111111 (
b111111110000000011111111 *
b1000 )
b1010011011101000110111101110010011001010010000001000001010011000101010100100000011100110111010101100010011101000111001001100001011000110111010001101001011011110110111000100000011100100110010101110011011101010110110001110100 ,
#105000
b111111110000000011111111 !
b111111110000000011111111 +
1%
#110000
0%
b1010011011101000110111101110010011001010010000001000001010011000101010100100000011011000110111101100111011010010110001100100000011100100110010101110011011101010110110001110100 ,
#115000
1%
#120000
0%
#125000
1%
#130000
0%
